{"ast":null,"code":"// src/components/sections/Contact.js\nimport React,{useState,useEffect}from'react';import'./Contact.css';import useWindowControls from'../../hooks/useWindowControls';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Contact=()=>{const{isExpanded,isVisible,TrafficLights}=useWindowControls();const[showEmail,setShowEmail]=useState(false);const[message,setMessage]=useState('');const[isTyping,setIsTyping]=useState(false);const[showEmailContent,setShowEmailContent]=useState(false);const[sentMessage,setSentMessage]=useState(false);useEffect(()=>{if(sentMessage){setIsTyping(true);const typingTimer=setTimeout(()=>{setIsTyping(false);setShowEmailContent(true);},1500);return()=>clearTimeout(typingTimer);}else{setIsTyping(false);setShowEmailContent(false);}},[sentMessage]);const handleSend=()=>{if(message.toLowerCase().trim()==='show email'){setSentMessage(true);setMessage('');}};const handleKeyPress=e=>{if(e.key==='Enter'&&message.toLowerCase().trim()==='show email'){handleSend();}};const resetConversation=()=>{setSentMessage(false);setShowEmailContent(false);setIsTyping(false);};if(!isVisible)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"contact-card \".concat(isExpanded?'expanded':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"contact-header\",children:[/*#__PURE__*/_jsx(TrafficLights,{}),/*#__PURE__*/_jsx(\"h2\",{children:\"contact\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"contact-body\",children:sentMessage&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-container\",children:/*#__PURE__*/_jsx(\"p\",{className:\"sent-message\",children:\"show email\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"message-container left\",children:isTyping?/*#__PURE__*/_jsx(\"div\",{className:\"typing-indicator\"}):showEmailContent&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"email-display\",children:\"sarvagya [at] berkeley [dot] edu\"}),/*#__PURE__*/_jsx(\"button\",{className:\"reset-button\",onClick:resetConversation,children:\"Clear conversation\"})]})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-bar\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"message-input\",placeholder:\"Type 'show email' and press send\",value:message,onChange:e=>setMessage(e.target.value),onKeyPress:handleKeyPress}),/*#__PURE__*/_jsx(\"button\",{className:\"send-button \".concat(message.toLowerCase().trim()==='show email'?'active':''),onClick:handleSend,disabled:message.toLowerCase().trim()!=='show email',children:\"Send\"})]})]});};export default Contact;","map":{"version":3,"names":["React","useState","useEffect","useWindowControls","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Contact","isExpanded","isVisible","TrafficLights","showEmail","setShowEmail","message","setMessage","isTyping","setIsTyping","showEmailContent","setShowEmailContent","sentMessage","setSentMessage","typingTimer","setTimeout","clearTimeout","handleSend","toLowerCase","trim","handleKeyPress","e","key","resetConversation","className","concat","children","onClick","type","placeholder","value","onChange","target","onKeyPress","disabled"],"sources":["/Users/sarvagyasomvanshi/Documents/Code/som1shi.github.io/src/components/sections/Contact.js"],"sourcesContent":["// src/components/sections/Contact.js\nimport React, { useState, useEffect } from 'react';\nimport './Contact.css';\nimport useWindowControls from '../../hooks/useWindowControls';\n\nconst Contact = () => {\n    const { isExpanded, isVisible, TrafficLights } = useWindowControls();\n    const [showEmail, setShowEmail] = useState(false);\n    const [message, setMessage] = useState('');\n    const [isTyping, setIsTyping] = useState(false);\n    const [showEmailContent, setShowEmailContent] = useState(false);\n    const [sentMessage, setSentMessage] = useState(false);\n\n    useEffect(() => {\n        if (sentMessage) {\n            setIsTyping(true);\n            const typingTimer = setTimeout(() => {\n                setIsTyping(false);\n                setShowEmailContent(true);\n            }, 1500);\n            return () => clearTimeout(typingTimer);\n        } else {\n            setIsTyping(false);\n            setShowEmailContent(false);\n        }\n    }, [sentMessage]);\n\n    const handleSend = () => {\n        if (message.toLowerCase().trim() === 'show email') {\n            setSentMessage(true);\n            setMessage('');\n        }\n    };\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter' && message.toLowerCase().trim() === 'show email') {\n            handleSend();\n        }\n    };\n\n    const resetConversation = () => {\n        setSentMessage(false);\n        setShowEmailContent(false);\n        setIsTyping(false);\n    };\n\n    if (!isVisible) return null;\n\n    return (\n        <div className={`contact-card ${isExpanded ? 'expanded' : ''}`}>\n            <div className=\"contact-header\">\n                <TrafficLights />\n                <h2>contact</h2>\n            </div>\n            <div className=\"contact-body\">\n                {sentMessage && (\n                    <>\n                        <div className=\"message-container\">\n                            <p className=\"sent-message\">show email</p>\n                        </div>\n                        <div className=\"message-container left\">\n                            {isTyping ? (\n                                <div className=\"typing-indicator\" />\n                            ) : showEmailContent && (\n                                <>\n                                    <p className=\"email-display\">sarvagya [at] berkeley [dot] edu</p>\n                                    <button className=\"reset-button\" onClick={resetConversation}>\n                                        Clear conversation\n                                    </button>\n                                </>\n                            )}\n                        </div>\n                    </>\n                )}\n            </div>\n            <div className=\"message-bar\">\n                <input \n                    type=\"text\" \n                    className=\"message-input\" \n                    placeholder=\"Type 'show email' and press send\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    onKeyPress={handleKeyPress}\n                />\n                <button \n                    className={`send-button ${message.toLowerCase().trim() === 'show email' ? 'active' : ''}`}\n                    onClick={handleSend}\n                    disabled={message.toLowerCase().trim() !== 'show email'}\n                >\n                    Send\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Contact;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}