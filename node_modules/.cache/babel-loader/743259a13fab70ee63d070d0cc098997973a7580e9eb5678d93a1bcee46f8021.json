{"ast":null,"code":"var _jsxFileName = \"/Users/sarvagyasomvanshi/Documents/Code/som1shi.github.io/src/components/EmojiBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './EmojiBackground.css';\n\n// Updated emoji list with more visible options\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EMOJIS = ['üåü', '‚≠ê', 'üí´', '‚ú®', 'üíª', 'üöÄ', 'ü§ñ', '‚ö°', 'üîÆ', 'üéÆ', 'üñ•Ô∏è', 'üì±', '‚öôÔ∏è', 'üõ†Ô∏è', '</>', 'üìü', 'üì°', '·Ø§', 'üîó', 'üìå'];\nconst EmojiBackground = () => {\n  _s();\n  const containerRef = useRef(null);\n  const handleMouseMove = e => {\n    if (!containerRef.current) return;\n    const emojis = containerRef.current.getElementsByClassName('emoji-line');\n    const mouseX = e.clientX;\n    const mouseY = e.clientY;\n    Array.from(emojis).forEach(emoji => {\n      const rect = emoji.getBoundingClientRect();\n      const emojiX = rect.left + rect.width / 2;\n      const emojiY = rect.top + rect.height / 2;\n      const distX = mouseX - emojiX;\n      const distY = mouseY - emojiY;\n      const distance = Math.sqrt(distX * distX + distY * distY);\n      if (distance < 100) {\n        const angle = Math.atan2(distY, distX);\n        const pushX = -Math.cos(angle) * (100 - distance) * 0.5;\n        const pushY = -Math.sin(angle) * (100 - distance) * 0.5;\n        emoji.style.transform = `translate(${pushX}px, ${pushY}px)`;\n      } else {\n        emoji.style.transform = '';\n      }\n    });\n  };\n  const createEmojiLine = () => {\n    if (!containerRef.current) return;\n    const emoji = EMOJIS[Math.floor(Math.random() * EMOJIS.length)];\n    const line = document.createElement('div');\n    line.className = 'emoji-line';\n    line.innerHTML = emoji;\n    const startX = Math.random() * window.innerWidth;\n    const duration = 15 + Math.random() * 10;\n    const size = 24 + Math.random() * 20;\n    const goingUp = Math.random() > 0.5;\n    line.style.left = `${startX}px`;\n    line.style.fontSize = `${size}px`;\n    line.style.animation = `${goingUp ? 'floatUp' : 'floatDown'} ${duration}s linear`;\n    line.addEventListener('animationend', () => {\n      if (containerRef.current && containerRef.current.contains(line)) {\n        containerRef.current.removeChild(line);\n      }\n    });\n    containerRef.current.appendChild(line);\n  };\n  useEffect(() => {\n    const interval = setInterval(createEmojiLine, 900);\n    for (let i = 0; i < 6; i++) createEmojiLine();\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => {\n      clearInterval(interval);\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"emoji-background\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 12\n  }, this);\n};\n_s(EmojiBackground, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = EmojiBackground;\nexport default EmojiBackground;\nvar _c;\n$RefreshReg$(_c, \"EmojiBackground\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","EMOJIS","EmojiBackground","_s","containerRef","handleMouseMove","e","current","emojis","getElementsByClassName","mouseX","clientX","mouseY","clientY","Array","from","forEach","emoji","rect","getBoundingClientRect","emojiX","left","width","emojiY","top","height","distX","distY","distance","Math","sqrt","angle","atan2","pushX","cos","pushY","sin","style","transform","createEmojiLine","floor","random","length","line","document","createElement","className","innerHTML","startX","window","innerWidth","duration","size","goingUp","fontSize","animation","addEventListener","contains","removeChild","appendChild","interval","setInterval","i","clearInterval","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sarvagyasomvanshi/Documents/Code/som1shi.github.io/src/components/EmojiBackground.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './EmojiBackground.css';\n\n// Updated emoji list with more visible options\nconst EMOJIS = ['üåü', '‚≠ê', 'üí´', '‚ú®', 'üíª', 'üöÄ', 'ü§ñ', '‚ö°', 'üîÆ', 'üéÆ', 'üñ•Ô∏è', 'üì±', '‚öôÔ∏è','üõ†Ô∏è', '</>', 'üìü', 'üì°','·Ø§', 'üîó', 'üìå'];\n\nconst EmojiBackground = () => {\n    const containerRef = useRef(null);\n\n    const handleMouseMove = (e) => {\n        if (!containerRef.current) return;\n        const emojis = containerRef.current.getElementsByClassName('emoji-line');\n        const mouseX = e.clientX;\n        const mouseY = e.clientY;\n\n        Array.from(emojis).forEach(emoji => {\n            const rect = emoji.getBoundingClientRect();\n            const emojiX = rect.left + rect.width / 2;\n            const emojiY = rect.top + rect.height / 2;\n            \n            const distX = mouseX - emojiX;\n            const distY = mouseY - emojiY;\n            const distance = Math.sqrt(distX * distX + distY * distY);\n            \n            if (distance < 100) {\n                const angle = Math.atan2(distY, distX);\n                const pushX = -Math.cos(angle) * (100 - distance) * 0.5;\n                const pushY = -Math.sin(angle) * (100 - distance) * 0.5;\n                \n                emoji.style.transform = `translate(${pushX}px, ${pushY}px)`;\n            } else {\n                emoji.style.transform = '';\n            }\n        });\n    };\n\n    const createEmojiLine = () => {\n        if (!containerRef.current) return;\n\n        const emoji = EMOJIS[Math.floor(Math.random() * EMOJIS.length)];\n        const line = document.createElement('div');\n        line.className = 'emoji-line';\n        line.innerHTML = emoji;\n\n        const startX = Math.random() * window.innerWidth;\n        const duration = 15 + Math.random() * 10;\n        const size = 24 + Math.random() * 20;\n        const goingUp = Math.random() > 0.5;\n\n        line.style.left = `${startX}px`;\n        line.style.fontSize = `${size}px`;\n        line.style.animation = `${goingUp ? 'floatUp' : 'floatDown'} ${duration}s linear`;\n\n        line.addEventListener('animationend', () => {\n            if (containerRef.current && containerRef.current.contains(line)) {\n                containerRef.current.removeChild(line);\n            }\n        });\n\n        containerRef.current.appendChild(line);\n    };\n\n    useEffect(() => {\n        const interval = setInterval(createEmojiLine, 900);\n        for (let i = 0; i < 6; i++) createEmojiLine();\n\n        window.addEventListener('mousemove', handleMouseMove);\n        return () => {\n            clearInterval(interval);\n            window.removeEventListener('mousemove', handleMouseMove);\n        };\n    }, []);\n\n    return <div ref={containerRef} className=\"emoji-background\" />;\n};\n\nexport default EmojiBackground; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}